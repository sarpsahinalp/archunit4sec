java.io.File.canRead()
java.io.File.exists()
java.io.File.getFreeSpace()
java.io.File.getTotalSpace()
java.io.File.getUsableSpace()
java.io.File.isDirectory()
java.io.File.isFile()
java.io.File.isHidden()
java.io.File.lastModified()
java.io.File.length()
java.io.File.normalizedList()
java.io.File.listRoots()
java.io.File.getAbsolutePath()
java.io.File.getCanonicalPath()
java.io.FileInputStream.<init>(java.io.File)
java.io.FileInputStream.<init>(java.io.FileDescriptor)
java.io.RandomAccessFile.<init>(java.io.File, java.lang.String, boolean)
java.util.zip.ZipFile.<init>(java.io.File, int, java.nio.charset.Charset)
sun.awt.image.FileImageSource.<init>(java.lang.String)
sun.net.httpserver.simpleserver.FileServerHandler.<init>(java.nio.file.Path, java.util.function.UnaryOperator)
com.sun.jmx.remote.security.HashedPasswordManager.loadPasswords()
jdk.nio.Channels.readWriteSelectableChannel(java.io.FileDescriptor, jdk.nio.Channels$SelectableChannelCloser)
sun.awt.SunToolkit.checkPermissions(java.lang.String)
sun.awt.shell.ShellFolderManager.checkFile(java.io.File, java.lang.SecurityManager)
sun.awt.shell.Win32ShellFolder2.getFileSystemPath(int)
sun.awt.shell.Win32ShellFolder2.listFiles(boolean)
sun.awt.shell.Win32ShellFolderManager2.checkFile(java.io.File, java.lang.SecurityManager)
java.nio.file.FileSystem.getRootDirectories()
java.nio.file.FileSystem.getFileStores()

- Also for the network connection important
jdk.internal.loader.URLClassPath.check(java.net.URL)
sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(java.net.URL)

sun.nio.fs.AbstractUserDefinedFileAttributeView.checkAccess(java.lang.String, boolean, boolean)
sun.nio.fs.WindowsAclFileAttributeView.checkAccess(sun.nio.fs.WindowsPath, boolean, boolean)
sun.nio.fs.WindowsChannelFactory.open(java.lang.String, java.lang.String, sun.nio.fs.WindowsChannelFactory$Flags, long)
sun.nio.fs.WindowsPath.checkRead()
sun.nio.fs.WindowsPath.register(java.nio.file.WatchService, [Ljava.nio.file.WatchEvent$Kind;, [Ljava.nio.file.WatchEvent$Modifier;)
sun.nio.fs.WindowsPath.register(java.nio.file.WatchService, [Ljava.nio.file.WatchEvent$Kind;, [Ljava.nio.file.WatchEvent$Modifier;)