java.net.Authenticator.setDefault(java.net.Authenticator)
java.net.Authenticator.requestPasswordAuthentication(java.net.Authenticator, java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.Authenticator$RequestorType)
java.net.Authenticator.requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.Authenticator$RequestorType)
java.net.Authenticator.getDefault()
java.net.Authenticator.requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)
java.net.Authenticator.requestPasswordAuthentication(java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)
java.net.HttpURLConnection.setRequestMethod(java.lang.String)
java.net.NetworkInterface.getCheckedInetAddresses()
java.net.NetworkInterface.getHardwareAddress()
sun.nio.ch.UnixDomainSockets.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.util.SecurityConstants.<clinit>()
sun.security.provider.PolicyFile.getKnownPermission(java.lang.Class, java.lang.String, java.lang.String)
java.security.CodeSource.matchLocation(java.security.CodeSource)
java.lang.SecurityManager.checkConnect(java.lang.String, int, java.lang.Object)
java.lang.SecurityManager.checkListen(int)
java.lang.SecurityManager.checkConnect(java.lang.String, int)
java.lang.SecurityManager.checkMulticast(java.net.InetAddress, byte)
java.lang.SecurityManager.checkMulticast(java.net.InetAddress)
java.lang.SecurityManager.checkAccept(java.lang.String, int)
java.net.HttpURLConnection.getPermission()
java.net.URLClassLoader.getPermissions(java.security.CodeSource)
sun.net.www.protocol.ftp.FtpURLConnection.getPermission()
sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(java.net.URL)
sun.net.www.protocol.mailto.MailToURLConnection.getPermission()
sun.rmi.registry.RegistryImpl.getAccessControlContext(int)
sun.rmi.registry.RegistryImpl.<init>(int)
sun.rmi.registry.RegistryImpl.<init>(int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory, java.io.ObjectInputFilter)
sun.rmi.server.LoaderHandler.addPermissionsForURLs([Ljava.net.URL;, java.security.PermissionCollection, boolean)
sun.rmi.transport.DGCClient.createSocketAcc()
sun.rmi.transport.DGCImpl$2.run()
sun.security.krb5.KrbServiceLocator.getKerberosService(java.lang.String, java.lang.String)
sun.security.krb5.KrbServiceLocator.getKerberosService(java.lang.String)
sun.security.provider.PolicyFile.getKnownPermission(java.lang.Class, java.lang.String, java.lang.String)
sun.security.util.SecurityConstants.<clinit>()